---
- hosts: appservers
  sudo: true
  tasks:
    - name: checkout bmorrall/rails-common repo
      git:
        repo: https://github.com/bmorrall/docker-rails-common.git
        version: spike/baserails
        dest: /apps/rails-common/src

    - name: build bmorrall/rails-common image
      docker_image:
        path: /apps/rails-common/src
        name: bmorrall/rails-common
        state: present

    - name: checkout bmorrall/please-ignore repo
      git:
        repo: https://github.com/bmorrall/PleaseIgnore.git
        version: spike/nginx-config
        dest: /apps/please-ignore/src

    - name: build bmorrall/please-ignore image
      docker_image:
        path: /apps/please-ignore/src
        name: bmorrall/please-ignore
        state: present

    # - name: migrate bmorrall/please-ignore database
    #   docker:
    #     command: bundle exec rake db:migrate
    #     detach: false
    #     image: bmorrall/please-ignore
    #     state: running
    #     env:
    #       - SECRET_KEY_BASE={{ please_ignore_secret_key }}
    #       - DEVISE_SECRET_KEY={{ please_ignore_devise_secret }}
    #       - DATABASE_URL=postgres://docker:docker@{{ database_host }}/docker

    - name: remove existing container
      docker:
        image: bmorrall/please-ignore
        name: please_ignore
        state: absent

    - name: start bmorrall/please-ignore container
      docker:
        image: bmorrall/please-ignore
        name: please_ignore
        state: running
        env:
          - DATABASE_URL=postgres://docker:docker@{{ database_host }}/docker
          - REDIS_URL=redis://{{ redis_host }}:6379/12/please_ignore
          - REDIS_CACHE_URL=redis://{{ redis_host }}:6379/0/cache
          - SECRET_KEY_BASE={{ please_ignore_secret_key }}
          - DEVISE_SECRET_KEY={{ please_ignore_devise_secret }}
          - UNICORN_WORKERS=2
        ports:
          - 80:80
        volumes:
          - /apps/please-ignore/log:/apps/please-ignore/log

    - name: allow port 80 through firewall
      ufw: rule=allow port=80 proto=tcp
      notify: reboot server

  handlers:
    - name: reboot server
      command: /sbin/reboot
      notify:
        - wait for startup

    - name: wait for startup
      sudo: false
      local_action: wait_for host={{ ansible_ssh_host }} port={{ ansible_ssh_port }} state=started
 
